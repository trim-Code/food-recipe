# services:
#   postgres:
#     image: postgres:15
#     restart: always
#     volumes:
#       - db_data:/var/lib/postgresql/data
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: john4321
#       POSTGRES_DB: foodrecipe
#     ports:
#       - "5435:5432" # Change the host port to 5435 to avoid conflict

#   graphql-engine:
#     image: hasura/graphql-engine:v2.42.0
#     ports:
#       - "8080:8080"
#     restart: always
#     depends_on:
#       - postgres
#     environment:
#       ## postgres database to store Hasura metadata
#       HASURA_GRAPHQL_METADATA_DATABASE_URL: postgres://postgres:john4321@postgres:5432/foodrecipe
#       ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
#       PG_DATABASE_URL: postgres://postgres:john4321@postgres:5432/foodrecipe
#       ## enable the console served by server
#       HASURA_GRAPHQL_ENABLE_CONSOLE: "true" # set to "false" to disable console
#       ## enable debugging mode. It is recommended to disable this in production
#       HASURA_GRAPHQL_DEV_MODE: "true"
#       HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
#       ## uncomment next line to run console offline (i.e load console assets from server instead of CDN)
#       # HASURA_GRAPHQL_CONSOLE_ASSETS_DIR: /srv/console-assets
#       ## uncomment next line to set an admin secret
#       HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
#       HASURA_GRAPHQL_METADATA_DEFAULTS: '{"backend_configs":{"dataconnector":{"athena":{"uri":"http://data-connector-agent:8081/api/v1/athena"},"mariadb":{"uri":"http://data-connector-agent:8081/api/v1/mariadb"},"mysql8":{"uri":"http://data-connector-agent:8081/api/v1/mysql"},"oracle":{"uri":"http://data-connector-agent:8081/api/v1/oracle"},"snowflake":{"uri":"http://data-connector-agent:8081/api/v1/snowflake"}}}}'

#   pgadmin:
#     image: dpage/pgadmin4
#     container_name: pgadmin_container
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@gmail.com
#       PGADMIN_DEFAULT_PASSWORD: admin
#       PGADMIN_CONFIG_SERVER_MODE: "False"
#     ports:
#       - "5050:80"
#     depends_on:
#       - postgres

#   backend:
#     build: ./backend
#     container_name: backend_container
#     restart: always
#     ports:
#       - "7001:7001"
#     environment:
#       DATABASE_URL: postgres://postgres:john4321@postgres:5432/foodrecipe
#       HASURA_GRAPHQL_ENDPOINT: http://graphql-engine:8080/v1/graphql
#       HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
#     depends_on:
#       - postgres
#       - graphql-engine

# volumes:
#   db_data:


version: "3.8"

services:
  postgres:
    image: postgres:15
    restart: always
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5435:5432"

  graphql-engine:
    image: hasura/graphql-engine:v2.42.0
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - postgres
    environment:
      HASURA_GRAPHQL_METADATA_DATABASE_URL: ${HASURA_GRAPHQL_METADATA_DATABASE_URL}
      PG_DATABASE_URL: ${PG_DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: ${HASURA_GRAPHQL_ENABLE_CONSOLE}
      HASURA_GRAPHQL_DEV_MODE: ${HASURA_GRAPHQL_DEV_MODE}
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: ${HASURA_GRAPHQL_ENABLED_LOG_TYPES}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_METADATA_DEFAULTS: ${HASURA_GRAPHQL_METADATA_DEFAULTS}

  backend:
    build: ./backend
    container_name: backend_container
    restart: always
    ports:
      - "7001:7001"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      HASURA_GRAPHQL_ENDPOINT: ${HASURA_GRAPHQL_ENDPOINT}
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
    depends_on:
      - postgres
      - graphql-engine

volumes:
  db_data: